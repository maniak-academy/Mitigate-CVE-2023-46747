---
- name: Execute the mitigation script on F5 BIG-IP
  hosts: bigip_hosts
  gather_facts: false
  vars:
    md5_hash: 3be777528261ff9cb58f66c5d9af494b

  tasks:
    - name: Perform MD5 checksum for mitigation.sh
      ansible.builtin.stat:
        get_checksum: true
        checksum_algorithm: md5
        path: mitigation.sh
      register: result
      delegate_to: localhost

    - name: Assert mitigation script MD5 checksum
      ansible.builtin.assert:
        fail_msg: Failed to verify MD5 hash! Aborting...
        success_msg: MD5 hash is verified successfully
        that:
          - "{{ result.stat.checksum == md5_hash }}"
        quiet: true

    - name: Copy the mitigation script to the BIG-IP
      ansible.builtin.copy:
        src: mitigation.sh
        dest: /tmp/mitigation.sh
        mode: +x
      delegate_to: "{{ inventory_hostname }}"

    - name: Execute the mitigation script on the BIG-IP
      ansible.builtin.command:
        cmd: /tmp/mitigation.sh
      changed_when: true
      delegate_to: "{{ inventory_hostname }}"
      register: script_result

    - name: Save script output messages
      ansible.builtin.set_fact:
        host_script_output: "{{ script_result.stdout.split('\n') }}"
      when: script_result.stdout

    - name: Aggregate script output messages on localhost
      ansible.builtin.set_fact:
        script_output_messages: "{{ script_output_messages | default([]) + [{'host': inventory_hostname, 'msg': item}] }}"
      loop: "{{ host_script_output }}"
      delegate_to: localhost
      run_once: false

    - name: Display the script error output
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop: "{{ script_result.stderr.split('\n') }}"
      when: script_result.stderr

    - name: Grep for secret pattern in specified files
      ansible.builtin.shell:
        cmd: grep -m1 -ioE '(required)?secret.*' /config/httpd/conf.d/proxy_ajp.conf /etc/tomcat/server.xml
      changed_when: false
      delegate_to: "{{ inventory_hostname }}"
      register: grep_result

    - name: Display the grep stdout output
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop: "{{ grep_result.stdout.split('\n') }}"
      when: grep_result.stdout

    - name: Display the grep stderr output
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop: "{{ grep_result.stderr.split('\n') }}"
      when: grep_result.stderr

    - name: Remove the mitigation script from the BIG-IP
      ansible.builtin.file:
        path: /tmp/mitigation.sh
        state: absent
      delegate_to: "{{ inventory_hostname }}"
